@page "/regemp"
@inject LoginService loginService
@inject EmpService empService
@inject GlobalService globalService
@inject NavigationManager NM

<h3>Login</h3>
<EditForm Model="login" OnValidSubmit="HandleSubmit">
    <div>
        <label for="firstname">Fornavn</label>
        <InputText id="firstname" @bind-Value="@employee.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Efternavn</label>
        <InputText id="lastname" @bind-Value="@employee.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="loginid">LoginID</label>
        <InputNumber id="loginid" @bind-Value="@employee.LoginId" class="form-control"></InputNumber>
    </div>
    <div class="col-12 row">
        <label class="col-2" style="font-weight: bold">city:</label>
        <SelectCity OnChangeEvent="OnSelectCityChange"></SelectCity>
    </div>
    <button type="submit" class="btn btn-primary">Create Login</button>
</EditForm>

@if (isUploaded == true)
{
    <p>Employee has been registered</p>
}



@code {
    EmpModel employee = new EmpModel();
    LoginModel login = new LoginModel();
    DepartmentModel? department { get; set; } = new DepartmentModel();
    bool isUploaded = false;

    public string? SelectedCity { get; set; }

    private void HandleSubmit()
    {
        employee.CityId = Convert.ToInt32(SelectedCity);
        employee = empService.AddEmp(employee);
        //login = loginService.AddLogin(login);
        isUploaded = true;

        NM.NavigateTo("/login");
        Task.Delay(15000);

        isUploaded = false;
    }
    private void OnSelectCityChange(ChangeEventArgs changeEventArgs)
    {
        SelectedCity = changeEventArgs.Value.ToString();
        department.CityId = int.Parse(SelectedCity);
    }
}
